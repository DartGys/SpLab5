Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> assignment
Rule 2     statement -> expression
Rule 3     assignment -> IDENTIFIER EQUALS expression
Rule 4     expression -> SQRT LPAREN expression RPAREN
Rule 5     expression -> expression PLUS expression
Rule 6     expression -> expression MINUS expression
Rule 7     expression -> expression TIMES expression
Rule 8     expression -> expression DIVIDE expression
Rule 9     expression -> MINUS expression
Rule 10    expression -> LPAREN expression RPAREN
Rule 11    expression -> NUMBER
Rule 12    expression -> expression EXPONENT expression
Rule 13    expression -> IDENTIFIER

Terminals, with rules where they appear

DIVIDE               : 8
EQUALS               : 3
EXPONENT             : 12
IDENTIFIER           : 3 13
LPAREN               : 4 10
MINUS                : 6 9
NUMBER               : 11
PLUS                 : 5
RPAREN               : 4 10
SQRT                 : 4
TIMES                : 7
error                : 

Nonterminals, with rules where they appear

assignment           : 1
expression           : 2 3 4 5 5 6 6 7 7 8 8 9 10 12 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . assignment
    (2) statement -> . expression
    (3) assignment -> . IDENTIFIER EQUALS expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 4
    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8

    statement                      shift and go to state 1
    assignment                     shift and go to state 2
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> assignment .

    $end            reduce using rule 1 (statement -> assignment .)


state 3

    (2) statement -> expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13


state 4

    (3) assignment -> IDENTIFIER . EQUALS expression
    (13) expression -> IDENTIFIER .

    EQUALS          shift and go to state 14
    PLUS            reduce using rule 13 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 13 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 13 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 13 (expression -> IDENTIFIER .)
    EXPONENT        reduce using rule 13 (expression -> IDENTIFIER .)
    $end            reduce using rule 13 (expression -> IDENTIFIER .)


state 5

    (4) expression -> SQRT . LPAREN expression RPAREN

    LPAREN          shift and go to state 15


state 6

    (10) expression -> LPAREN . expression RPAREN
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 16

state 7

    (9) expression -> MINUS . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 18

state 8

    (11) expression -> NUMBER .

    PLUS            reduce using rule 11 (expression -> NUMBER .)
    MINUS           reduce using rule 11 (expression -> NUMBER .)
    TIMES           reduce using rule 11 (expression -> NUMBER .)
    DIVIDE          reduce using rule 11 (expression -> NUMBER .)
    EXPONENT        reduce using rule 11 (expression -> NUMBER .)
    $end            reduce using rule 11 (expression -> NUMBER .)
    RPAREN          reduce using rule 11 (expression -> NUMBER .)


state 9

    (5) expression -> expression PLUS . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 19

state 10

    (6) expression -> expression MINUS . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 20

state 11

    (7) expression -> expression TIMES . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 21

state 12

    (8) expression -> expression DIVIDE . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 22

state 13

    (12) expression -> expression EXPONENT . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 23

state 14

    (3) assignment -> IDENTIFIER EQUALS . expression
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 24

state 15

    (4) expression -> SQRT LPAREN . expression RPAREN
    (4) expression -> . SQRT LPAREN expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . expression EXPONENT expression
    (13) expression -> . IDENTIFIER

    SQRT            shift and go to state 5
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 17

    expression                     shift and go to state 25

state 16

    (10) expression -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    RPAREN          shift and go to state 26
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13


state 17

    (13) expression -> IDENTIFIER .

    RPAREN          reduce using rule 13 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 13 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 13 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 13 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 13 (expression -> IDENTIFIER .)
    EXPONENT        reduce using rule 13 (expression -> IDENTIFIER .)
    $end            reduce using rule 13 (expression -> IDENTIFIER .)


state 18

    (9) expression -> MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 9 (expression -> MINUS expression .)
    MINUS           reduce using rule 9 (expression -> MINUS expression .)
    TIMES           reduce using rule 9 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 9 (expression -> MINUS expression .)
    $end            reduce using rule 9 (expression -> MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> MINUS expression .)
    EXPONENT        shift and go to state 13

  ! EXPONENT        [ reduce using rule 9 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]


state 19

    (5) expression -> expression PLUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 5 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 5 (expression -> expression PLUS expression .)
    $end            reduce using rule 5 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13

  ! TIMES           [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]


state 20

    (6) expression -> expression MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 6 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 6 (expression -> expression MINUS expression .)
    $end            reduce using rule 6 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13

  ! TIMES           [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]


state 21

    (7) expression -> expression TIMES expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 7 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 7 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 7 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 7 (expression -> expression TIMES expression .)
    $end            reduce using rule 7 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 7 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 13

  ! EXPONENT        [ reduce using rule 7 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]


state 22

    (8) expression -> expression DIVIDE expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 8 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 8 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 8 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 8 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 8 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 8 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 13

  ! EXPONENT        [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]


state 23

    (12) expression -> expression EXPONENT expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    PLUS            reduce using rule 12 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 12 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 12 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 12 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 12 (expression -> expression EXPONENT expression .)
    $end            reduce using rule 12 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 12 (expression -> expression EXPONENT expression .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! EXPONENT        [ shift and go to state 13 ]


state 24

    (3) assignment -> IDENTIFIER EQUALS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    $end            reduce using rule 3 (assignment -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13


state 25

    (4) expression -> SQRT LPAREN expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (12) expression -> expression . EXPONENT expression

    RPAREN          shift and go to state 27
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENT        shift and go to state 13


state 26

    (10) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)


state 27

    (4) expression -> SQRT LPAREN expression RPAREN .

    PLUS            reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    $end            reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 4 (expression -> SQRT LPAREN expression RPAREN .)

